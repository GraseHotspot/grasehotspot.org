{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/development","result":{"data":{"mdx":{"id":"67aa3b4b-ea57-598d-bfd3-c3e7e0273e5d","excerpt":"All source code is stored in a Git repository at Github. See  https://github.com/GraseHotspot  for a list of repositories. If you are thinking of assisting withâ€¦","fields":{"slug":"/development/"},"frontmatter":{"title":"Development","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Development\",\n  \"date\": \"2011-06-21T13:19:12+10:00\",\n  \"status\": \"publish\",\n  \"permalink\": \"/development\",\n  \"author\": \"tim\",\n  \"excerpt\": \"\",\n  \"type\": \"page\",\n  \"id\": 132\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"All source code is stored in a Git repository at Github. See \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/GraseHotspot\"\n  }, \"https://github.com/GraseHotspot\"), \" for a list of repositories. If you are thinking of assisting with development please subscribe to our \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://grasehotspot.org/mailing-list/\",\n    \"title\": \"Mailing List\"\n  }, \"mailing list\"), \" so we can keep track of what is being worked on by whom. All bug and feature requests can be put in the issue tracker on Github. The GRASE Hotspot is coded in PHP, and uses MDB2 for database abstraction. Coova Chilli is programmed in C and we apply a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://grasehotspot.org/documentation/coova-chilli-patches/\",\n    \"title\": \"Coova Chilli Patches\"\n  }, \"few small patches\"), \" to make it suitable for our use. We intend to develop more features for Coova Chilli to do with allowing uamdomains to be accessed without it counting against your traffic quota. When these patches are suitably coded and clean, we\\u2019ll request for them to be merged into Coova Chilli. Other than the Admin interface and captive portal pages, the rest of the easiness of GRASE Hotspot comes from the beautiful Debian Packaging system, that allows us to install each component simply, without having to worry about our changes being overridden. Each piece of software we use, has an \\u201Coverride\\u201D config package installed by GRASE Hotspot, which uses a variety of methods to modify the config files to suit our usage. Where possible we leave the packages normal config files inplace, and direct the software to use our config file (grase-conf-squid3) however some packages this isn\\u2019t possible and we do a dpkg-redirection so we can install our own config files.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/development/","next":{"label":"About","link":"/about"},"repositoryEditUrl":"https://github.com/GraseHotspot/grasehotspot.org/tree/main/src/docs/development.md","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}