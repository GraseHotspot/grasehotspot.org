{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/documentation/freeradius/meaningful-reply-message-for-access-reject","result":{"data":{"mdx":{"id":"97584a7a-0d69-506f-907e-119ace75f13a","excerpt":"See the indepth post at  http://tim.purewhite.id.au/2011/04/coova-chilli-freeradius-reply-message/ Basically, FreeRadius sql and sql _ counter modules don’t…","fields":{"slug":"/documentation/freeradius/meaningful-reply-message-for-access-reject/"},"frontmatter":{"title":"Meaningful Reply-Message for Access-Reject","description":null,"image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Meaningful Reply-Message for Access-Reject\",\n  \"date\": \"2011-04-03T01:54:11+10:00\",\n  \"status\": \"publish\",\n  \"permalink\": \"/documentation/freeradius/meaningful-reply-message-for-access-reject\",\n  \"author\": \"tim\",\n  \"excerpt\": \"\",\n  \"type\": \"page\",\n  \"id\": 64\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"See the indepth post at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://tim.purewhite.id.au/2011/04/coova-chilli-freeradius-reply-message/\"\n  }, \"http://tim.purewhite.id.au/2011/04/coova-chilli-freeradius-reply-message/\")), mdx(\"p\", null, \"Basically, FreeRadius sql and sql\", \"_\", \"counter modules don\\u2019t give the most meaningful Reply-Message (if any). Here are snippits of code that bring more meaningful messages.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ini\",\n    \"metastring\": \"title=/etc/freeradius/sites-available/default\",\n    \"title\": \"/etc/freeradius/sites-available/default\"\n  }, \"authorize {\\n    preprocess\\n    chap\\n    mschap\\n    suffix\\n    eap {\\n        ok = return\\n    }\\n    sql{\\n        notfound = 1\\n        reject = 2\\n    }\\n    if(notfound){\\n        update reply {\\n            Reply-Message := \\\"Login Failed. Please check your Username and Password\\\"\\n        }\\n        reject\\n    }\\n\\n    if(reject){\\n        update reply {\\n            Reply-Message := \\\"Login Failed. Please check your Username and Password\\\"\\n        }\\n        reject\\n    }   \\n\\n    expiration{\\n        userlock = 1\\n    }\\n    if(userlock){\\n            update reply {\\n                    Reply-Message := \\\"Your account has expired, %{User-Name}\\\"\\n            }\\n            reject\\n    }\\n\\n    logintime\\n\\n    noresetBytecounter{\\n        reject = 1\\n    }\\n    if(reject){\\n            update reply {\\n                    Reply-Message := \\\"You have reached your bandwidth limit\\\"\\n            }\\n            reject\\n    }\\n\\n    noresetcounter{\\n        reject = 1\\n    }\\n    if(reject){\\n            update reply {\\n                    Reply-Message := \\\"You have reached your time limit\\\"\\n            }\\n            reject\\n    }\\n\\n    pap\\n}\\n\\npost-auth {\\n    sql\\n    exec\\n    Post-Auth-Type REJECT {\\n        update reply { # Fallback error message\\n            Reply-Message = \\\"Login Failed. Please check your username and password\\\"\\n        }\\n        attr_filter.access_reject\\n    }\\n}\\n\")), mdx(\"p\", null, \"(Where testing for notfound and reject, you can give more specific error messages if you wish, however this can lead to abuse of the system if for example it tells them the username is valid but the password isn\\u2019t.)\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/documentation/freeradius/meaningful-reply-message-for-access-reject/","next":{"label":"About","link":"/about"},"repositoryEditUrl":"https://github.com/GraseHotspot/grasehotspot.org/tree/main/src/docs/documentation/freeradius/meaningful-reply-message-for-access-reject.md","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}